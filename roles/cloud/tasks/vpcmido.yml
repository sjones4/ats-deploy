---
- name: install midonet related packages
  yum:
    name:
      - podman
    state: present
  tags:
    - image
    - packages

- name: eucalyptus midonet gateway veth unit
  template:
    src: eucalyptus-vpcmido-gwnet.service.j2
    dest: /etc/systemd/system/eucalyptus-vpcmido-gwnet.service
    owner: root
    group: root
    mode: 0644
  when: vpcmido_gw_srv_veth_create

- name: eucalyptus midonet gateway proxy arp runtime
  command:
    cmd: sysctl -w net/ipv4/conf/{{ cloud_firewalld_public_interface }}/proxy_arp=1
  when: vpcmido_gw_srv_veth_create

- name: eucalyptus midonet gateway forwarding / proxy arp persistent
  copy:
    dest: /etc/sysctl.d/80-net-{{ cloud_firewalld_public_interface }}.conf
    mode: 0644
    content: |
      # Enable forwarding and proxy arp for eucalyptus midonet gateway
      net/ipv4/conf/{{ cloud_firewalld_public_interface }}/forwarding=1
      net/ipv4/conf/{{ cloud_firewalld_public_interface }}/proxy_arp=1
  when: vpcmido_gw_srv_veth_create

- name: midonet cluster systemd drop-in directory
  file:
    path: /etc/systemd/system/midonet-cluster.service.d
    state: directory
    mode: 0755

- name: midonet cluster systemd drop-in configuration
  copy:
    src: systemd-midonet-cluster-overrides.conf
    dest: /etc/systemd/system/midonet-cluster.service.d/overrides.conf
    owner: root
    group: root
    mode: 0644

- name: midonet cluster logs directory
  file:
    path: /var/log/midonet-cluster
    state: directory
    mode: 0755

- name: midonet cluster environment sysconfig
  template:
    src: sysconfig-midonet-cluster.j2
    dest: /etc/sysconfig/midonet-cluster
    owner: root
    group: root
    mode: 0644

- name: midonet cluster uuid sysconfig
  shell: |
    set -eu
    echo "UUID=$(uuidgen --random)" > /etc/sysconfig/midonet-cluster-uuid
  args:
    creates: /etc/sysconfig/midonet-cluster-uuid

- name: midonet cluster container and systemd service
  shell: |
    set -eu
    podman create --name midonet-cluster \
      --env-file /etc/sysconfig/midonet-cluster \
      --env-file /etc/sysconfig/midonet-cluster-uuid \
      --network host \
      --volume /var/log/midonet-cluster:/var/log/midonet-cluster \
      docker.io/sjones4/midonet-cluster:5.2
    podman generate systemd --name --timeout 60 --restart-policy always midonet-cluster > /etc/systemd/system/midonet-cluster.service
  args:
    creates: /etc/systemd/system/midonet-cluster.service

- name: midonet agent (midolman) systemd drop-in directory
  file:
    path: /etc/systemd/system/midonet-agent.service.d
    state: directory
    mode: 0755

- name: midonet agent (midolman) systemd drop-in configuration
  copy:
    src: systemd-midonet-agent-overrides.conf
    dest: /etc/systemd/system/midonet-agent.service.d/overrides.conf
    owner: root
    group: root
    mode: 0644

- name: midonet agent (midolman) logs directory
  file:
    path: /var/log/midonet-agent
    state: directory
    mode: 0755

- name: midonet agent (midolman) environment sysconfig
  template:
    src: sysconfig-midonet-agent.j2
    dest: /etc/sysconfig/midonet-agent
    owner: root
    group: root
    mode: 0644

- name: midonet agent (midolman) uuid sysconfig
  shell: |
    set -eu
    echo "UUID=$(uuidgen --random)" > /etc/sysconfig/midonet-agent-uuid
  args:
    creates: /etc/sysconfig/midonet-agent-uuid

- name: midonet agent (midolman) container and systemd service
  shell: |
    set -eu
    podman create --name midonet-agent \
      --env-file /etc/sysconfig/midonet-agent \
      --env-file /etc/sysconfig/midonet-cluster-uuid \
      --net host \
      --privileged \
      --volume /var/log/midonet-agent:/var/log/midolman \
      docker.io/sjones4/midonet-agent:5.2
    podman generate systemd --name --timeout 60 --restart-policy always midonet-agent > /etc/systemd/system/midonet-agent.service
  args:
    creates: /etc/systemd/system/midonet-agent.service

- name: eucanetd service.d directory
  file:
    path: /etc/systemd/system/eucanetd.service.d
    state: directory
    owner: root
    group: root
    mode: 0755

- name: eucanetd tunnel zone configuration drop-in
  copy:
    src: eucanetd-vpcmidotz.conf
    dest: /etc/systemd/system/eucanetd.service.d/eucanetd-vpcmidotz.conf
    owner: root
    group: root
    mode: 0644

- name: eucanetd filesystem namespace configuration drop-in
  copy:
    src: eucanetd-no-mount-ns.conf
    dest: /etc/systemd/system/eucanetd.service.d/eucanetd-no-mount-ns.conf
    owner: root
    group: root
    mode: 0644

- name: systemd daemon reload
  systemd:
    daemon_reload: true

- name: start eucalyptus midonet gateway veth service
  systemd:
    enabled: true
    state: started
    name: eucalyptus-vpcmido-gwnet
  when: vpcmido_gw_srv_veth_create

- name: eucalyptus firewalld midonet gateway service
  template:
    src: firewalld-service-euca-vpcmidogw.xml.j2
    dest: /etc/firewalld/services/euca-vpcmidogw.xml
    owner: root
    group: root
    mode: 0644
  tags:
    - firewalld

- name: eucalyptus firewalld midonet gateway zone
  template:
    src: firewalld-zone-euca-vpcmidogw.xml.j2
    dest: /etc/firewalld/zones/euca-vpcmidogw.xml
    owner: root
    group: root
    mode: 0644
  tags:
    - firewalld

- name: eucalyptus firewalld midonet gateway zone load
  command:
    cmd: firewall-cmd --permanent --new-zone euca-vpcmidogw
  tags:
    - firewalld
  register: firewalld_result
  failed_when: "firewalld_result is failed and 'NAME_CONFLICT' not in firewalld_result.stderr"
  changed_when: '"NAME_CONFLICT" not in firewalld_result.stderr'
  when: cloud_firewalld_configure

- name: firewalld reload
  systemd:
    name: firewalld
    state: reloaded
  tags:
    - firewalld
  when: cloud_firewalld_configure and firewalld_result.changed

- name: eucalyptus firewalld midonet gateway service for zone
  firewalld:
    zone: "{{ cloud_firewalld_vpcmidogw_zone }}"
    service: euca-vpcmidogw
    state: enabled
    permanent: yes
    immediate: "{{ cloud_firewalld_start }}"
  tags:
    - firewalld
  when: cloud_firewalld_configure and cloud_firewalld_vpcmidogw_zone is not none

- name: eucalyptus firewalld midonet gateway dedicated interface zone
  firewalld:
    zone: euca-vpcmidogw
    interface: "{{ cloud_firewalld_vpcmidogw_interface }}"
    state: enabled
    permanent: yes
    immediate: "{{ cloud_firewalld_start }}"
  tags:
    - firewalld
  when: cloud_firewalld_configure and cloud_firewalld_vpcmidogw_interface is not none

- name: eucalyptus tunnel zone midonet configuration
  template:
    src: eucalyptus-vpcmidotz-up.sh.j2
    dest: /usr/local/bin/eucalyptus-vpcmidotz-up.sh
    owner: root
    group: root
    mode: 0755

- name: start midonet-cluster service
  systemd:
    enabled: true
    state: started
    name: midonet-cluster

- name: start midonet-agent (midolman) service
  systemd:
    enabled: true
    state: started
    name: midonet-agent

